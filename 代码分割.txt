1  在做项目的过程中，当代码量越来越大的时候；就需要涉及到优化；有一天你突然发现你的文件变得越来越大，打包变得越来越慢；
 这个时候就需要 进行代码分割了---- code-spliting

2  Code-splitting（代码分割）是把项目中一个大的入口文件分割成多个小的、单独的文件的进程。

3 一般进行代码分割 ，这看起来很难，但是一些类似于Webpack的工具已经做到这些了，并且React Loadable是为了让这件事儿变得更加简单。

            Route-based splitting(基于路由的代码风格) vs. Component-based splitting(基于组件的代码分割)

     路由分割：在进入响应的路由的时候 可能会加载一些不必要的组件；以此也会消耗响应的性能 
     组件分割：会在组件使用的时候。才进行相应的组件加载；不会再页面初始化的时候 ，进行相应的组件加载；对性能比较的好；

针对组件分割的时候；有时候接口，并没有返回相应的数据；可以 通过 props 的方式，传递一个 error 的布尔值；

    如果 是 ture 就加载相应的组件；否则就不加载；
    function Loading(props) {
        if (props.error) {
            return <div>Error!</div>;
        } else {
            return <div>Loading...</div>;
        }
    }